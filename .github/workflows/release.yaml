name: Release

on:
  push:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8.9
      - name: Python cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-1-${{ hashFiles('requirements/ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements/ci.txt
      - name: Check format
        run: black src
      - name: Lint
        run: flake8 src --jobs=auto
      - name: Validate dependencies
        run: pip-compile-multi verify
  build:
    needs:
      - check
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset: linux-x86_64
            build-path: build/x86_64-unknown-linux-gnu/release/install/t
          - os: macos-latest
            asset: macos-x86_64
            build-path: build/x86_64-apple-darwin/release/install/t
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          # Canonical definition of the version of Python that will be used
          # for the tool inside the Rust container. Must be a version available
          # at <https://github.com/indygreg/python-build-standalone/releases>.
          python-version: 3.8.9
      - name: Rust cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/
            target
          key: ${{ runner.os }}-cargo-1
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Python cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-1-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install PyOxidizer
        run: |
          # Use the main branch as it has unreleased features. PyOxidizer aims
          # to maintain strong backwards compatibility and stability on the
          # main branch.
          cargo install \
            --git https://github.com/indygreg/PyOxidizer.git \
            --branch main \
            pyoxidizer
      - name: Build
        run: VERSION="v${{ github.run_number }}" pyoxidizer build --release
      - name: Upload build
        uses: actions/upload-artifact@v2.2.3
        with:
          name: ${{ matrix.asset }}
          path: ${{ matrix.build-path }}
          if-no-files-found: error
          retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download linux build
        uses: actions/download-artifact@v2.0.9
        with:
          name: linux-x86_64
          path: linux-x86_64
      - name: Download macOS build
        uses: actions/download-artifact@v2.0.9
        with:
          name: macos-x86_64
          path: macos-x86_64
      - name: Zip Releases
        run: |
          ls -alh
          tar -czvf linux-x86_64.tar.gz linux-x86_64/t
          tar -czvf macos-x86_64.tar.gz macos-x86_64/t
      - name: Tag release
        run: |
          git tag v${{ github.run_number }}
          git push --tags
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ github.run_number }}
          body: This is an incremental release and is available for self-update.
          prerelease: true
          tag_name: v${{ github.run_number }}
          files: "*.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
