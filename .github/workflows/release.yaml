name: Release

on:
  push:
    branches: [main]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Rust Cache
        uses: Swatinem/rust-cache@v1.2.0
        with:
          key: cache-v1
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          # Canonical definition of the version of Python that will be used
          # for the tool inside the Rust container. Must be a version available
          # at <https://github.com/indygreg/python-build-standalone/releases>.
          python-version: 3.8.9
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install PyOxidizer
        run: |
          # Use the main branch as it has unreleased features. PyOxidizer aims
          # to maintain strong backwards compatibility and stability on the
          # main branch.
          cargo install \
            --git https://github.com/indygreg/PyOxidizer.git \
            --branch main \
            pyoxidizer
      - name: Build
        run: VERSION=$GITHUB_RUN_NUMBER pyoxidizer build --release
      - name: Upload build
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "linux-x86_64-v${{ env.GITHUB_RUN_NUMBER }}"
          path: build/x86_64-unknown-linux-gnu/release/install/t
          if-no-files-found: error
          retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs:
      - build-linux
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download linux build
        uses: actions/download-artifact@v2.0.9
        with:
          name: "linux-x86_64-v${{ env.GITHUB_RUN_NUMBER }}"
      - name: Tag release
        run: |
          git tag $GITHUB_RUN_NUMBER
          git push --tags
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.GITHUB_RUN_NUMBER }}
          prerelease: true
          tag: v${{ env.GITHUB_RUN_NUMBER }}
          files: |
            linux-x86_64-v${{ env.GITHUB_RUN_NUMBER }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
